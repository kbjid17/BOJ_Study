package prob_123더하기5_15990_220316;

import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {
	static int T,N;
	static long[][] dp;
	static long[] ar;
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());
		dp = new long[4][100001];
		ar = new long[100001];
		
		ar[1] = 1; //1 
		ar[2] = 1; // 2
		ar[3] = 3; // 1+2 2+1 3
		ar[4] = 3; // 1+2+1 1+3 3+1
		
		
		dp[1][1] = 1; // 1로 시작하여 1을 만드는 경우
		dp[2][2] = 1; // 2로 시작하여 2를 만드는 경우
		dp[1][3] = 1; // 1로 시작하여 3을 만드는 경우
		dp[2][3] = 1; // 2로 시작하여 3을 만드는 경우
		dp[3][3] = 1; // 3으로 시작하여 3을 만드는 경우
		dp[1][4] = 2; // 1로 시작하여 4를 만드는 경우
		dp[3][4] = 1; // 3으로 시작하여 4를 만드는 경우
		

		for (int i = 4; i <= 100000; i++) {
//			System.out.println(i + "의 경우");
			dp[1][i] = (dp[2][i-1] + dp[3][i-1]) % 1000000009;
			dp[2][i] = (dp[1][i-2] + dp[3][i-2]) % 1000000009;
			dp[3][i] = (dp[2][i-3] + dp[1][i-3]) % 1000000009;
//			System.out.println();
			ar[i] = (dp[1][i] + dp[2][i] + dp[3][i]) % 1000000009;
//			System.out.println(ar[i]);
		}
		for (int i = 0; i < N; i++) { 
			int n = Integer.parseInt(br.readLine());
//			System.out.println(dp[1][n] + " " + dp[2][n] + " " + dp[3][n]);
//			System.out.println(ar[n]);
			System.out.println(ar[n]);
		}
//		
//		dp[1][5] = ar[4]-dp[1][4];
//		dp[2][5] = ar[3]-dp[2][3];
//		dp[3][5] = ar[2]-dp[3][2];
//		System.out.println(dp[1][5] +" " + dp[2][5] +" "+ dp[3][5]);
	}

}


//5
/*
 1(1)
 1
 
 2(1)
 2
 
 3(3)
 1+2
 2+1
 3
 
 4(3)
 1+2+1
 1+3
 
 sum : 1,2,3을 연속해서 쓰면 안된다는 경우를 무시했을 때 구할 수 있는 모든 경우의 수
  =>1+d[3]에서 처음에 1이 오는 경우를 제외(-1)
  d[3] = 3 , d[3]에서 1이 처음에 오는 경우 : 1 ==> d[3]-2
  d[1][3] = 2( sum[3] - d[1][2])
  
  =>2+d[2]에서 처음에 2가 오는 경우를 제외(하면 가능한 경우가 없음)
  1-1 = 0
 3+1
  =>3+d[1]에서 처음에 3이 오는 경우를 제외
  d[1] = 1 ,d[1]에서 3이 처음에 오는 경우 : (-0)
  1-0 = 1
 
 5(4)
 1+3+1
 ==> 1 + d[4]에서 처음에 1이 오는 경우를 제외(ar[4]- dp[1][4]) 1
 d[4]에서 1이 오는 경우는 어떻게 구하는가?
 =>d[4]에서 처음에 1로 시작하는 경우는 d[3]에서 1이 오는 경우도 없음(
 d[3]에서 1이 오는 경우는 d[2]에서 1이 먼저 오는 경우도 없음
 2+1+2
 2+3
 ==> 2 + d[3]에서 처음에 2가 오는 경우를 제외(ar[3]-dp[2][3]) 2
 3+2
 ==> 3 + d[2]에서 처음에 3이 오는 경우를 제외(ar[2]-dp[3][2]) 1
 
 6(8)
 1+2+1+2
 1+2+3
 1+3+2
  ==> 1 + d[5]에서 처음에 1이 오는 경우를 제외( dp[1][6] = sum[5] - dp[1][5]) 3
 2+1+2+1
 2+1+3
 2+3+1
  ==> 3 + d[4]에서 처음에 2가 오는 경우를 제외(dp[2][6] = sum[4] - dp[2][4]) 3
 3+1+2
 3+2+1
 ==> 3 + d[3]에서 처음에 3이 오는 경우를 제외(dp[3][6] = sum[3] - dp[3][3]) 2
 
 7(9)
 1+2+1+2+1
 1+2+1+3
 1+2+3+1
 1+3+1+2
 1+3+2+1
 ==> 1 + d[6]에서 처음에 1이 오는 경우를 제외(8-
 2+1+3+1
 2+3+2
 ==> 2 + d[5]에서 처음에 2가 오는 경우를 제외
 3+1+2+1
 3+1+3
 ==> 3 + d[4]에서 처음에 3이 오는 경우를 제외
 */
